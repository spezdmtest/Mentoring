Шаблон: Декоратор (Decorator)
============================================================================================
Цель:
Динамическое добавление новых обязоностей объекту.
============================================================================================
Для чего используется:
Используется в качестве альтернативы порождению подклассов для расширения функциональности
============================================================================================
Пример использования:
- динамическое и понятное клиентам добавления обязонностей объектам;
- реализация обязаностей, которые могут быть сняты с объекта;
- расширение класса путем порождения подлкассов невозможно по каким-либо причинам.